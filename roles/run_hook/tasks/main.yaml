---
# (c) Copyright IBM Corporation
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.


- name: "Combine hooks and run them for {{ step }}"
  vars:
    _hooks: >-
      {{
        hostvars[inventory_hostname][step] | default([])
      }}
    _pattern: "^{{ step }}_(.*)$"
    _queried_hooks: >-
      {{
        hostvars[inventory_hostname] |
        dict2items |
        selectattr('key', 'match', _pattern)
      }}
    _final_hook_list: >-
      {% set hooks_list = [] -%}
      {% for hook_element in (_queried_hooks | default([])) -%}
      {%   set hook_definitions = [hook_element] if hook_element is mapping else hook_element -%}
      {%   for hook_definition in hook_definitions -%}
      {%     set name = hook_definition.key | regex_replace(_pattern, '\\1') | replace('_', ' ') | capitalize -%}
      {%     set _ = hooks_list.append(hook_definition.value | combine({'name': name})) -%}
      {%   endfor -%}
      {% endfor -%}
      {{ hooks_list }}
  block:
    - name: Checking validity of hook list.
      ansible.builtin.assert:
        quiet: true
        that:
          - _hooks is not string
          - _hooks is not mapping
          - _hooks is iterable

    - name: Assert queried hooks are mappings.
      vars:
        _not_mapping_hooks: >-
          {{
            _final_hook_list | reject('mapping') | list
          }}
      ansible.builtin.assert:
        quiet: true
        that:
          - _not_mapping_hooks | length == 0
        msg: >-
          All single hooks must be a list of mappings or a mapping.

    - name: "Loop on hooks for {{ step }}"
      vars:
        _hook_list: >-
          {{
            _final_hook_list + _hooks
          }}
      ansible.builtin.include_tasks: playbook.yaml
      loop: "{{ _hook_list }}"
      loop_control:
        loop_var: hook
