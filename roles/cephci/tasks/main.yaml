---
# (c) Copyright IBM Corporation
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.


- name: Ensure the workspace is present
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: "0755"
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_gid }}"
  loop:
    - "{{ neerali_cephci_basedir }}"
    - "{{ neerali_cephci_artifactdir }}"
    - "{{ neerali_cephci_logdir }}"
  label_control:
    label: "{{ item }}"

- name: Ensure the configuration exists
  ansible.builtin.copy:
    content: "{{ neerali_cephci_conf | to_nice_yaml }}"
    dest: "{{ ansible_user_dir ~ '.cephci.yaml' }}"
    mode: "0600"
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_gid }}"

- name: Ensuring cephci repository exists
  ansible.builtin.git:
    repo: "{{ neerali_cephci_repo }}"
    dest: "{{ neerali_cephci_artifactdir }}"
    depth: 1
    single_branch: true
    force: true
    version: "{{ neerali_cephci_repo_branch }}"
  register: _clone_result
  retries: 3
  delay: 15
  until: "_clone_result is not failed"

- name: Prepare the virtual environment
  vars:
    _src_dir: "{{ neerali_cephci_artifactdir ~ '/cephci' }}"
  ansible.builtin.pip:
    chdir: "{{ _src_dir }}"
    virtualenv: "{{ _src_dir ~ '/venv' }}"
    virtualenv_command: "python3 -m venv"
    requirements: "test_requirements.txt"
    state: present

- name: Ensure the cluster configuration is available.
  ansible.builtin.include_tasks:
    file: cluster_conf.yaml

- name: Call the test suites from cephci
  ansible.builtin.include_tasks:
    file: run.yaml
