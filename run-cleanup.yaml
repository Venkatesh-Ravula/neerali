---
# (c) Copyright IBM Corporation
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

# Requires the admin nodes and the controller node for execution. The
# controller node is required as it is the one that has SSH access to all the
# nodes participating in any cluster.


- name: Cleanup the test environment
  hosts: _admin

  tasks:
    - name: Gather the ceph fsid
      become: true
      ansible.builtin.command:
        cmd: "ceph fsid"
      changed_when: false
      register: _ceph_fsid

    - name: Gather the hosts participating in the cluster
      become: true
      ansible.builtin.command:
        cmd: "ceph orch host ls --format json"
      changed_when: false
      register: _ceph_hosts

    - name: Disable ceph orchestration
      become: true
      ansible.builtin.command:
        cmd: ceph mgr module disable cephadm
      register: _mgr_result
      ignore_errors: true
      changed_when:
        - _mgr_result.rc == 0

    - name: Purge the ceph cluster
      vars:
        _fsid: "{{ _ceph_fsid.stdout | trim }}"
      ansible.builtin.command:
        cmd: >-
          ssh {{ item }}.{{ base_domain }}
          sudo cephadm rm-cluster --force --zap-osds --fsid {{ _fsid }}
      changed_when: true
      delegate_to: localhost
      loop: >-
        {{
          _ceph_hosts.stdout | from_json | map(attribute='hostname')
        }}
      loop_control:
        label: "{{ item }}"

    - name: Ensure the directory does not exist
      ansible.builtin.file:
        path: "{{ ansible_user_dir ~ '/neerali-data' }}"
        state: absent

- name: Clean the target node
  hosts: "{{ neerali_target_host | default('localhost') }}"

  tasks:
    - name: Ensure the neerali workspace odes not exist
      ansible.builtin.file:
        path: "{{ ansible_user_dir ~ '/neerali-data' }}"
        state: absent

    - name: Clear the facts
      ansible.builtin.meta: "clear_facts"
